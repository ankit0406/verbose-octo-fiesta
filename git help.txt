git log options:

git log --oneline
git log -5
git log --author="an*"   // will return commits made by anyone whose name starts with an
git log --since="mm-dd-yyyy" --until
git log --help

git log --grep="<pattern/string>"  // will return all commits having a message as specified;


git reset head --hard  	// Working directory specific
else  git checkout <file>	// file name specific

git rebase : can be used with both push and pull.
git rebase pull
git rebase push
When you resolve conflicts in rebase state, then after resolving conflicts, add the file and run git rebase --continue.


Interactive rebase:

If you do a changes in series of commits, and you realize that it should go in one commit only, then you can use git rebase -i.

git rebase -i head~3 		// rebase last 3 commits including head.

This will open a notepad file with various commands. You can use squash  by writing a s or squash in front of the commit in notepad.

this is the 2nd commit.

This is 3rd commit.

This is 4th commit.
